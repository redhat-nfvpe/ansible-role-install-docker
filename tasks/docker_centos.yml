---
- name: Install primary deps (for ansible)
  package:
    name: libselinux-python
    state: present
  when: testing is not defined and not testing

- name: Validate thin_pool kernel module is loaded
  modprobe:
    name: dm_thin_pool
    state: present

- name: Setup Docker name and version to install
  set_fact:
    docker_package: "{% if docker_package_version == 'latest' %}{{ docker_package_base_name }}{% else %}{{ docker_package_base_name }}-{{ docker_package_version }}{% endif %}"

- name: Install Docker and dependencies
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - "{{ docker_package }}"
      - atomic-registries

- name: Get installed Docker version # noqa command-instead-of-module
  command: rpm --query {{ docker_package }} --queryformat '%{VERSION}'
  register: installed_docker_version
  changed_when: false

# Updates Docker service file to allow for registries. Not necessary once
# version 1.13.x is available.
# Ref: http://pkgs.fedoraproject.org/cgit/rpms/docker.git/plain/docker.service.centos?id=957fa278aa5f152da2a588a1a28f650ba7fe807d
# Ref: https://github.com/projectatomic/docker/issues/285
- name: Update Docker systemd unit file
  copy:
    src: docker.centos.service
    dest: /usr/lib/systemd/system/docker.service
  when: >
    (installed_docker_version.stdout is version('1.13', '<')) and
    docker_repo_type == 'os'
  register: docker_service_file

- name: Setup registry data
  template:
    src: etc_containers_registries.conf.j2
    dest: /etc/containers/registries.conf
  when: docker_repo_type == 'os'
  register: registry_data

- name: Set Docker proxy config if needed
  block:
    - name: Create Docker service config dir
      file: path=/etc/systemd/system/docker.service.d state=directory

    - name: Create Docker proxy config
      template: src=proxy.j2 dest=/etc/systemd/system/docker.service.d/http-proxy.conf owner=root mode=0644
  when: '"http_proxy" in calc_proxy_env or "https_proxy" in calc_proxy_env'

- name: Reload systemd units # noqa no-handler
  systemd:
    daemon_reload: yes
  when: 'docker_service_file.changed or "http_proxy" in calc_proxy_env or "https_proxy" in calc_proxy_env'
